<!-- Generated by documentation.js. Update this documentation by updating the source code. -->

### Table of Contents

-   [ZapArbiter][1]
    -   [Parameters][2]
    -   [initiateSubscription][3]
        -   [Parameters][4]
    -   [getSubscription][5]
        -   [Parameters][6]
    -   [endSubscriptionSubscriber][7]
        -   [Parameters][8]
    -   [endSubscriptionProvider][9]
        -   [Parameters][10]
    -   [listenSubscriptionEnd][11]
        -   [Parameters][12]
    -   [listenSubscriptionStart][13]
        -   [Parameters][14]
    -   [listen][15]
        -   [Parameters][16]
-   [BaseContract][17]
    -   [getContractOwner][18]
-   [BaseContract][19]
    -   [Parameters][20]
    -   [getContractOwner][21]
-   [BaseContract][22]
    -   [getContractOwner][23]
-   [BaseContract][24]
    -   [getContractOwner][25]
-   [BaseContract][26]
    -   [getContractOwner][27]
-   [BaseContract][28]
    -   [getContractOwner][29]
-   [BaseContract][30]
    -   [getContractOwner][31]
-   [getArtifacts][32]
-   [ZapBondage][33]
    -   [Parameters][34]
    -   [bond][35]
        -   [Parameters][36]
    -   [unbond][37]
        -   [Parameters][38]
    -   [getBoundDots][39]
        -   [Parameters][40]
    -   [calcZapForDots][41]
        -   [Parameters][42]
    -   [calcBondRate][43]
        -   [Parameters][44]
    -   [currentCostOfDot][45]
        -   [Parameters][46]
    -   [getDotsIssued][47]
        -   [Parameters][48]
    -   [getZapBound][49]
        -   [Parameters][50]
    -   [listen][51]
        -   [Parameters][52]
    -   [listenBound][53]
        -   [Parameters][54]
    -   [listenUnbound][55]
        -   [Parameters][56]
    -   [listenEscrowed][57]
        -   [Parameters][58]
    -   [listenReleased][59]
        -   [Parameters][60]
-   [Curve][61]
    -   [structurize][62]
    -   [getPrice][63]
        -   [Parameters][64]
    -   [convertToBNArrays][65]
-   [Curve][66]
    -   [structurize][67]
    -   [getPrice][68]
        -   [Parameters][69]
    -   [convertToBNArrays][70]
-   [ZapDispatch][71]
    -   [Parameters][72]
    -   [queryData][73]
        -   [Parameters][74]
    -   [respond][75]
        -   [Parameters][76]
    -   [listen][77]
        -   [Parameters][78]
    -   [listenIncoming][79]
        -   [Parameters][80]
    -   [listenFulfillQuery][81]
        -   [Parameters][82]
    -   [listenOffchainResponse][83]
        -   [Parameters][84]
-   [ZapProvider][85]
    -   [Parameters][86]
    -   [initiateProvider][87]
        -   [Parameters][88]
    -   [initiateProviderCurve][89]
        -   [Parameters][90]
    -   [getTitle][91]
    -   [getPubkey][92]
    -   [getCurve][93]
        -   [Parameters][94]
    -   [getZapBound][95]
        -   [Parameters][96]
    -   [getZapRequired][97]
        -   [Parameters][98]
    -   [calcDotsForZap][99]
        -   [Parameters][100]
    -   [listenSubscribes][101]
        -   [Parameters][102]
    -   [listenUnsubscribes][103]
        -   [Parameters][104]
    -   [listenQueries][105]
        -   [Parameters][106]
    -   [respond][107]
        -   [Parameters][108]
-   [EventEmitter][109]
-   [EventEmitter][110]
-   [ZapRegistry][111]
    -   [Parameters][112]
    -   [initiateProvider][113]
        -   [Parameters][114]
    -   [initiateProviderCurve][115]
        -   [Parameters][116]
    -   [setEndpointParams][117]
        -   [Parameters][118]
    -   [getProviderPublicKey][119]
        -   [Parameters][120]
    -   [getProviderTitle][121]
        -   [Parameters][122]
    -   [getProviderCurve][123]
        -   [Parameters][124]
    -   [getNextProvider][125]
        -   [Parameters][126]
    -   [getNextEndpointParams][127]
        -   [Parameters][128]
    -   [listen][129]
        -   [Parameters][130]
    -   [listenNewProvider][131]
        -   [Parameters][132]
    -   [listenNewCurve][133]
        -   [Parameters][134]
-   [Subscriber][135]
    -   [Parameters][136]
-   [ZapToken][137]
    -   [Parameters][138]
    -   [balanceOf][139]
        -   [Parameters][140]
    -   [send][141]
        -   [Parameters][142]
    -   [allocate][143]
        -   [Parameters][144]
    -   [approve][145]
        -   [Parameters][146]

## ZapArbiter

Provides interface to  Arbiter contract for managing subscriptions activities

### Parameters

-   `artifactsDir` **[string][147]** 
-   `networkId` **[string][147]** 
-   `networkProvider`  : Ethereum network provider

### initiateSubscription

Start subscription with a provider's endpoint

#### Parameters

-   `_a`  
-   `provider` **address** 
-   `endpoint` **[string][147]** 
-   `endpoint_params` **[Array][148]&lt;[string][147]>** 
-   `blocks` **[number][149]** that subscription will last
-   `provider` **[number][149]** 's public key
-   `from` **address** : subscriber
-   `gas` **[number][149]** (optional)

Returns **[Promise][150]&lt;txid>** txid of init transaction

### getSubscription

#### Parameters

-   `_a`  
-   `provider` **address** 
-   `subscriber` **address** 
-   `endpoint` **[string][147]** 

Returns **[Promise][150]&lt;[string][147]>** Subscription Information

### endSubscriptionSubscriber

#### Parameters

-   `_a`  
-   `provider` **address** 
-   `endpoint` **[string][147]** 
-   `from` **address** : subscriber
-   `gas` **[number][149]** 

Returns **[Promise][150]&lt;txid>** unsubscribe txid

### endSubscriptionProvider

#### Parameters

-   `_a`  
-   `subscriber` **address** 
-   `endpoint` **[string][147]** 
-   `from` **address** : provider
-   `gas` **[number][149]** 

Returns **[Promise][150]&lt;txid>** 

### listenSubscriptionEnd

#### Parameters

-   `filters` **Filter** object
-   `callback` **[Function][151]** 

### listenSubscriptionStart

#### Parameters

-   `filters` **Filter** 
-   `callback` **[Function][151]** 

### listen

#### Parameters

-   `filter` **Filter** 
-   `callback` **[Function][151]** 

## BaseContract

### getContractOwner

Get Contract owner address

Returns **[Promise][150]&lt;[string][147]>** owner's address of this contract instance

## BaseContract

Parent Class to Dispatch, Bondage, Arbiter, Token, Registry class
Provide access to contract instance and web3 provider instance

### Parameters

-   `artifactsDir` **([string][147] | null)** 
-   `artifactName` **[string][147]** 
-   `networkId` **([number][149] | null)** 
-   `networkProvider` **(any | null)** : Ethereum network provider

### getContractOwner

Get Contract owner address

Returns **[Promise][150]&lt;[string][147]>** owner's address of this contract instance

## BaseContract

### getContractOwner

Get Contract owner address

Returns **[Promise][150]&lt;[string][147]>** owner's address of this contract instance

## BaseContract

### getContractOwner

Get Contract owner address

Returns **[Promise][150]&lt;[string][147]>** owner's address of this contract instance

## BaseContract

### getContractOwner

Get Contract owner address

Returns **[Promise][150]&lt;[string][147]>** owner's address of this contract instance

## BaseContract

### getContractOwner

Get Contract owner address

Returns **[Promise][150]&lt;[string][147]>** owner's address of this contract instance

## BaseContract

### getContractOwner

Get Contract owner address

Returns **[Promise][150]&lt;[string][147]>** owner's address of this contract instance

## getArtifacts

Get Artifacts in this package

Returns **any** Artifacts

## ZapBondage

### Parameters

-   `artifactsDir` **any** 
-   `artifactName` **any** 
-   `networkId` **any** 
-   `networkProvider` **any** 

### bond

Bond number of Zap Token from a subscriber to a provider's endpoint,
this requires approved Zap Token from subscriber to Bondage contract

#### Parameters

-   `_a`  
-   `provider` **address** 
-   `endpoint` **[string][147]** 
-   `zapNum` **[number][149]** :  number of Zap Token to bond
-   `from` **address** : subscriber
-   `gas` **[number][149]** 

Returns **[Promise][150]&lt;txid>** 

### unbond

Unbond number of dots from a subscriber to a provider's endpoint

#### Parameters

-   `_a`  
-   `provider` **address** 
-   `endpoint` **[string][147]** 
-   `dots` **[number][149]** 
-   `from` **address** : subscriber
-   `gas` **[number][149]** 

Returns **[Promise][150]&lt;txid>** 

### getBoundDots

Get number of dots that are bounded to a provider's endpoint for a subscriber

#### Parameters

-   `_a`  
-   `subscriber` **address** 
-   `provider` **address** 
-   `endpoint` **[string][147]** 

Returns **[Promise][150]&lt;[number][149]>** : number of bound dots

### calcZapForDots

Calculate Zap required to bond number of dots to a provider's endpoint

#### Parameters

-   `_a`  
-   `provider` **address** 
-   `endpoint` **[string][147]** 
-   `dots` **[number][149]** : number of dots that subscriber wants to use

Returns **[Promise][150]&lt;[number][149]>** : number of Zap required to bond to use inquired dots

### calcBondRate

Calculate Bond's rate for a provider's endpoint

#### Parameters

-   `_a`  
-   `provider` **address** 
-   `endpoint` **[string][147]** 
-   `inquired` **[number][149]** zapNum to see how many dots can subscriber get

Returns **[Promise][150]&lt;[number][149]>** :  number of dots that can be used with inquired Zap Tokens

### currentCostOfDot

Get Zap Token cost of next inquired dots

#### Parameters

-   `_a`  
-   `provider` **address** 
-   `endpoint` **[string][147]** 
-   `dots` **[number][149]** : dots that subscriber want to use

Returns **[Promise][150]&lt;[number][149]>** : Price of inquired dots

### getDotsIssued

Get the amount of dots that have been issued for a provider's endpoint

#### Parameters

-   `_a`  
-   `provider` **address** 
-   `endpoint` **[string][147]** 

Returns **[Promise][150]&lt;[number][149]>** : number of issued dots

### getZapBound

Get amount of Zap tokens that are bound to a provider's endpoint

#### Parameters

-   `_a`  
-   `provider` **address** 
-   `endpoint` **[string][147]** 

Returns **[Promise][150]&lt;[number][149]>** number of bound Zap tokens

### listen

Listen to all Bondage contract's events with optional filters

#### Parameters

-   `filters` **Filter?** 
-   `callback` **[Function][151]** 

### listenBound

Listen to Bonding events

#### Parameters

-   `filters` **Filter?** 
-   `callback` **[Function][151]** 

### listenUnbound

Listen to Unbonding events

#### Parameters

-   `filters` **Filter** 
-   `callback` **[Function][151]** 

### listenEscrowed

Listen to Escrow events

#### Parameters

-   `filters` **Filter** 
-   `callback` **[Function][151]** 

### listenReleased

Listen to Release Bound Zap Tokens events

#### Parameters

-   `filters` **Filter** 
-   `callback` **[Function][151]** 

## Curve

This Class manage Curve definition for Provider's endpoint

### structurize

Turn constants, parts, dividers into curve's coef, power, fn, pieces

### getPrice

Get the price of a dot at a given totalBound

#### Parameters

-   `total` **[number][149]** bound dots

Returns **[number][149]** 

### convertToBNArrays

Convert this curve constants, parts, dividers into Array of Bignumbers

Returns **[Array][148]&lt;[Array][148]&lt;BigNumber>>** 

## Curve

### structurize

Turn constants, parts, dividers into curve's coef, power, fn, pieces

### getPrice

Get the price of a dot at a given totalBound

#### Parameters

-   `total` **[number][149]** bound dots

Returns **[number][149]** 

### convertToBNArrays

Convert this curve constants, parts, dividers into Array of Bignumbers

Returns **[Array][148]&lt;[Array][148]&lt;BigNumber>>** 

## ZapDispatch

Provides interface to Dispatch contract

### Parameters

-   `artifactsDir` **[string][147]** 
-   `networkId` **[number][149]** 
-   `networkProvider`  : Ethereum provider instance

### queryData

Subscriber query data to a provider's endpoint

#### Parameters

-   `_a`  
-   `provider` **address** 
-   `query` **[string][147]** 
-   `endpoint` **[string][147]** 
-   `endpointParams` **[Array][148]&lt;[string][147]>** 
-   `onchainProvider` **[boolean][152]** 
-   `onchainSubscriber` **[boolean][152]** 
-   `from` **address** 
-   `gas` **BigNumber** 

Returns **[Promise][150]&lt;txid>** txid of query transaction

### respond

Provider responds to a query it received

#### Parameters

-   `_a`  
-   `queryId` **[string][147]** 
-   `responseParams` **[Array][148]&lt;[string][147]>** 
-   `dynamic` **[boolean][152]** number of responses string
-   `from` **address** : provider
-   `gas` **BigNumber** 

Returns **[Promise][150]&lt;txid>** txid of respond method

### listen

Listen for all events with filters

#### Parameters

-   `filters` **Filter** 
-   `callback` **[Function][151]** 

### listenIncoming

Listen to Query Incoming events with filters

#### Parameters

-   `filters` **[object][153]** 
-   `callback` **[Function][151]** 

### listenFulfillQuery

Listen to FUlFill Query when providers respond

#### Parameters

-   `filters` **[object][153]** 
-   `callback` **[Function][151]** 

### listenOffchainResponse

Listen to Offchain responses from providers

#### Parameters

-   `filters` **[object][153]** 
-   `callback` **[Function][151]** 

## ZapProvider

### Parameters

-   `owner` **address** 
-   `handler` **ProviderHandler** 

### initiateProvider

Call ZapRegistry to create a new provider in Registry contract

#### Parameters

-   `_a`  
-   `public_key` **[string][147]** 
-   `title` **[string][147]** 
-   `endpoint` **[string][147]** 
-   `endpoint_params` **[Array][148]&lt;[string][147]>** 

Returns **[Promise][150]&lt;txid>** 

### initiateProviderCurve

Initiate Curve for an endpoint

#### Parameters

-   `_a`  
-   `endpoint` **[string][147]** 
-   `constants` **[Array][148]&lt;[number][149]>** 
-   `parts` **[Array][148]&lt;[number][149]>** 
-   `dividers` **[Array][148]&lt;[number][149]>** 

Returns **[Promise][150]&lt;txid>** 

### getTitle

Get title of this provider from Registry contract

Returns **[Promise][150]&lt;[string][147]>** 

### getPubkey

Get public key of this provider from Registry contract

Returns **[Promise][150]&lt;[string][147]>** 

### getCurve

Get Curve of an owned endpoint

#### Parameters

-   `endpoint` **[string][147]** 

Returns **[Promise][150]&lt;CurveType>** 

### getZapBound

Get amount Zap bound to an owned endpoint

#### Parameters

-   `endpoint` **[string][147]** 

Returns **[Promise][150]&lt;[number][149]>** number of Zap Token bound

### getZapRequired

#### Parameters

-   `_a`  
-   `endpoint`  
-   `dots`  

Returns **[Promise][150]&lt;[number][149]>** 

### calcDotsForZap

Calculate number of dots that subscriber can use for inquired number of Zap Tokens

#### Parameters

-   `_a`  
-   `endpoint` **[string][147]** 
-   `zapNum` **[number][149]** 

Returns **[Promise][150]&lt;[number][149]>** number of dots subscriber can get

### listenSubscribes

listen to new subscription events to this provider, managed by Arbiter contract

#### Parameters

-   `_a`  
-   `subscriber` **[string][147]** 
-   `fromBlock` **[number][149]** 

Returns **[Promise][150]&lt;void>** 

### listenUnsubscribes

Listen to unsubscription events to this provider, managed by Arbiter contract

#### Parameters

-   `_a`  
-   `subscriber` **[string][147]** 
-   `terminator` **[string][147]** : address that call unsubscribe, this can be subscriber or provider
-   `fromBlock` **[number][149]** 

Returns **[Promise][150]&lt;void>** 

### listenQueries

Listen to Queries events, managed by Dispatch contract

#### Parameters

-   `_a`  
-   `queryId` **[string][147]** 
-   `subscriber` **address** 
-   `fromBlock` **[number][149]** 

Returns **[Promise][150]&lt;void>** 

### respond

Respond to a query

#### Parameters

-   `_a`  
-   `queryId` **[string][147]** 
-   `responseParams` **[Array][148]&lt;[string][147]>** 
-   `dynamic` **[boolean][152]** number of responses or not

Returns **[Promise][150]&lt;any>** 

## EventEmitter

## EventEmitter

## ZapRegistry

Manage Providers and Curves registration

### Parameters

-   `artifactsDir` **any** 
-   `networkId` **any** 
-   `networkProvider` **any** 

### initiateProvider

Add a brand new provider in Registry contract, distinguished by provider's address

#### Parameters

-   `_a`  
-   `provider` **[string][147]** 's public_key
-   `provider` **[string][147]** 's title
-   `endpoint` **[string][147]** 
-   `endpoint_params` **[Array][148]&lt;[string][147]>** 
-   `from` **address** : provider's address
-   `gas` **BigNumber** 

Returns **[Promise][150]&lt;txid>** 

### initiateProviderCurve

Set Curve for a provider's endpoint
Curve can only be set once per endpoint

#### Parameters

-   `_a`  
-   `endpoint` **[string][147]** 
-   `curve` **CurveType** 
-   `from` **address** : provider
-   `gas` **BigNumber** 

Returns **[Promise][150]&lt;txid>** 

### setEndpointParams

Provider can set endpoint params for owned endpoint

#### Parameters

-   `_a`  
-   `endpoint` **[string][147]** 
-   `endpoint_params` **[Array][148]&lt;[string][147]>** 
-   `from` **address** : provider
-   `gas` **BigNumber** 

Returns **[Promise][150]&lt;txid>** 

### getProviderPublicKey

Get a provider's public key from Registry contract

#### Parameters

-   `provider` **address** 

Returns **[Promise][150]&lt;[number][149]>** 

### getProviderTitle

Get a provider's title from Registry contract

#### Parameters

-   `provider` **address** 

Returns **[Promise][150]&lt;[string][147]>** 

### getProviderCurve

Get a provider's endpoint's curve from Registry contract

#### Parameters

-   `provider` **[string][147]** 
-   `endpoint` **[string][147]** 

Returns **[Promise][150]&lt;CurveType>** 

### getNextProvider

Get provider in index +1 in Registry contract

#### Parameters

-   `index`  of next provider

Returns **[Promise][150]&lt;any>** 

### getNextEndpointParams

Get endpoint params at index of a provider's endpoint

#### Parameters

-   `_a`  
-   `provider` **address** 
-   `endpoint` **[string][147]** 
-   `index` **[number][149]** 

Returns **[Promise][150]&lt;[string][147]>** endpoint's param at index

### listen

Listen to all Registry contract events with filters

#### Parameters

-   `filters` **Filter** 
-   `callback` **[Function][151]** 

Returns **[Promise][150]&lt;void>** 

### listenNewProvider

Listen to Registry contracts events for new providers

#### Parameters

-   `filters` **Filter** 
-   `callback` **[Promise][150]&lt;void>** 

### listenNewCurve

Listen to Registry contract's events for new providers' curve

#### Parameters

-   `provider` **address** 
-   `callback` **[Promise][150]&lt;void>** 

## Subscriber

Subscriber class, Provides methods for subscribers

### Parameters

-   `owner` **[string][147]** 
-   `handler` **any** 

## ZapToken

ERC20 Tokens methods for Zap Tokens

### Parameters

-   `artifactsDir` **[string][147]?** 
-   `artifactName` **[string][147]** 
-   `networkId` **[string][147]?** 
-   `networkProvider` **[string][147]?** 

### balanceOf

Get Zap Token balance of address

#### Parameters

-   `address` **address** 

Returns **[Promise][150]&lt;[number][149]>** Zap balance

### send

Transfer Zap Token

#### Parameters

-   `_a`  
-   `to` **address** 
-   `amount` **[number][149]** 
-   `from` **address** 
-   `gas` **[number][149]** 

Returns **[Promise][150]&lt;txid>** 

### allocate

Allocate Zap Token from Zap contract owner to an address

#### Parameters

-   `_a`  
-   `to` **address** 
-   `amount` **[number][149]** 
-   `from` **address** 
-   `gas` **[number][149]** 

Returns **[Promise][150]&lt;txid>** 

### approve

Approve Zap Token to an address

#### Parameters

-   `_a`  
-   `to` **address** 
-   `amount` **[number][149]** 
-   `from` **address** 
-   `gas` **[number][149]** 

Returns **[Promise][150]&lt;txid>** 

[1]: #zaparbiter

[2]: #parameters

[3]: #initiatesubscription

[4]: #parameters-1

[5]: #getsubscription

[6]: #parameters-2

[7]: #endsubscriptionsubscriber

[8]: #parameters-3

[9]: #endsubscriptionprovider

[10]: #parameters-4

[11]: #listensubscriptionend

[12]: #parameters-5

[13]: #listensubscriptionstart

[14]: #parameters-6

[15]: #listen

[16]: #parameters-7

[17]: #basecontract

[18]: #getcontractowner

[19]: #basecontract-1

[20]: #parameters-8

[21]: #getcontractowner-1

[22]: #basecontract-2

[23]: #getcontractowner-2

[24]: #basecontract-3

[25]: #getcontractowner-3

[26]: #basecontract-4

[27]: #getcontractowner-4

[28]: #basecontract-5

[29]: #getcontractowner-5

[30]: #basecontract-6

[31]: #getcontractowner-6

[32]: #getartifacts

[33]: #zapbondage

[34]: #parameters-9

[35]: #bond

[36]: #parameters-10

[37]: #unbond

[38]: #parameters-11

[39]: #getbounddots

[40]: #parameters-12

[41]: #calczapfordots

[42]: #parameters-13

[43]: #calcbondrate

[44]: #parameters-14

[45]: #currentcostofdot

[46]: #parameters-15

[47]: #getdotsissued

[48]: #parameters-16

[49]: #getzapbound

[50]: #parameters-17

[51]: #listen-1

[52]: #parameters-18

[53]: #listenbound

[54]: #parameters-19

[55]: #listenunbound

[56]: #parameters-20

[57]: #listenescrowed

[58]: #parameters-21

[59]: #listenreleased

[60]: #parameters-22

[61]: #curve

[62]: #structurize

[63]: #getprice

[64]: #parameters-23

[65]: #converttobnarrays

[66]: #curve-1

[67]: #structurize-1

[68]: #getprice-1

[69]: #parameters-24

[70]: #converttobnarrays-1

[71]: #zapdispatch

[72]: #parameters-25

[73]: #querydata

[74]: #parameters-26

[75]: #respond

[76]: #parameters-27

[77]: #listen-2

[78]: #parameters-28

[79]: #listenincoming

[80]: #parameters-29

[81]: #listenfulfillquery

[82]: #parameters-30

[83]: #listenoffchainresponse

[84]: #parameters-31

[85]: #zapprovider

[86]: #parameters-32

[87]: #initiateprovider

[88]: #parameters-33

[89]: #initiateprovidercurve

[90]: #parameters-34

[91]: #gettitle

[92]: #getpubkey

[93]: #getcurve

[94]: #parameters-35

[95]: #getzapbound-1

[96]: #parameters-36

[97]: #getzaprequired

[98]: #parameters-37

[99]: #calcdotsforzap

[100]: #parameters-38

[101]: #listensubscribes

[102]: #parameters-39

[103]: #listenunsubscribes

[104]: #parameters-40

[105]: #listenqueries

[106]: #parameters-41

[107]: #respond-1

[108]: #parameters-42

[109]: #eventemitter

[110]: #eventemitter-1

[111]: #zapregistry

[112]: #parameters-43

[113]: #initiateprovider-1

[114]: #parameters-44

[115]: #initiateprovidercurve-1

[116]: #parameters-45

[117]: #setendpointparams

[118]: #parameters-46

[119]: #getproviderpublickey

[120]: #parameters-47

[121]: #getprovidertitle

[122]: #parameters-48

[123]: #getprovidercurve

[124]: #parameters-49

[125]: #getnextprovider

[126]: #parameters-50

[127]: #getnextendpointparams

[128]: #parameters-51

[129]: #listen-3

[130]: #parameters-52

[131]: #listennewprovider

[132]: #parameters-53

[133]: #listennewcurve

[134]: #parameters-54

[135]: #subscriber

[136]: #parameters-55

[137]: #zaptoken

[138]: #parameters-56

[139]: #balanceof

[140]: #parameters-57

[141]: #send

[142]: #parameters-58

[143]: #allocate

[144]: #parameters-59

[145]: #approve

[146]: #parameters-60

[147]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String

[148]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array

[149]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number

[150]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise

[151]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/function

[152]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean

[153]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object
